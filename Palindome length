#include <iostream>
#include <string.h>
using namespace std;

int maxlength_palindrom(char input[], int n){
    int maxLength = 1;
    int start = 0;
    int flag=0;
    int i,j;
  
    for(i=0;i<n; i++)
      {
      for(j=i;j<n;j++)
          {
            flag=1;

        //check for palin
        for (int k = 0; k < (j - i + 1) / 2; k++)
          //j-i+1 = length
                if (input[i + k] != input[j - k])
                    flag = 0;
 
            // Palindrome
            if (flag && (j - i + 1) > maxLength)
              {
                start = i;
                maxLength = j - i + 1;
              }
          }
      } 
    return maxLength;
}

int main(void){
    char input_string[100];
    /*Getting the input string.*/
    int i = 0;
    while(1) {
        cin >> input_string[i];
        if(input_string[i] == '.'){
            break;
        }
        i++;
    }
    int size = i;
    /*Print the length of the longest palindromic substring of the given string*/
    cout <<  maxlength_palindrom(input_string, size);
    return 0;
}


